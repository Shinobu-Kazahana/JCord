generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
  id       String @id @default(uuid())
  userId   String @unique
  name     String
  imageUrl String @db.Text
  email    String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  server Server[]
  member Member[]

  channel Channel[]
}

model Server {
  id         String    @id @default(uuid())
  name       String
  imageUrl   String    @db.Text
  inviteCode String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  member     Member[] //one to many
  channel    Channel[]
  profileID  String
  profile    Profile   @relation(fields: [profileID], references: [id], onDelete: Cascade)

  @@index(profileID)
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
  
}

model Member {
  id   String     @id @default(uuid())
  role MemberRole @default(GUEST)

  profileID String
  profile   Profile @relation(fields: [profileID], references: [id], onDelete: Cascade)
  serverID  String
  server    Server  @relation(fields: [serverID], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileID])
  @@index([serverID])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id        String      @id @default(uuid())
  name      String
  type      ChannelType @default(TEXT)
  profileID String
  profile   Profile     @relation(fields: [profileID], references: [id], onDelete: Cascade)

  serverID String
  server   Server @relation(fields: [serverID], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileID])
  @@index([serverID])
}
